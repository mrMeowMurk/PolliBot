from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

from src.managers.chat_manager import chat_manager
from src.keyboards.keyboards import get_main_keyboard, get_chat_history_keyboard

router = Router()

@router.message(Command("history"))
@router.callback_query(lambda c: c.data == "show_history")
async def show_chat_history(event: Message | CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    # –ü–æ–ª—É—á–∞–µ–º user_id –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Å–æ–±—ã—Ç–∏—è
    if isinstance(event, Message):
        user_id = event.from_user.id
        message = event
    else:
        user_id = event.from_user.id
        message = event.message
    
    history = await chat_manager.get_recent_history(user_id)
    
    if not history:
        response = "–ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –ø—É—Å—Ç–∞."
        if isinstance(event, CallbackQuery):
            await message.edit_text(response, reply_markup=get_main_keyboard())
            await event.answer()
        else:
            await message.answer(response, reply_markup=get_main_keyboard())
        return
    
    response = "üìú –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ:\n\n"
    for msg in history:
        role = "üë§ –í—ã" if msg["role"] == "user" else "ü§ñ –ë–æ—Ç"
        response += f"{role}: {msg['message']}\n"
    
    if isinstance(event, CallbackQuery):
        await message.edit_text(response, reply_markup=get_chat_history_keyboard())
        await event.answer()
    else:
        await message.answer(response, reply_markup=get_chat_history_keyboard())

@router.callback_query(lambda c: c.data == "clear_history")
async def clear_history(callback: CallbackQuery):
    """–û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞."""
    user_id = callback.from_user.id
    await chat_manager.clear_user_history(user_id)
    await callback.message.edit_text("–ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –æ—á–∏—â–µ–Ω–∞.", reply_markup=get_main_keyboard())
    await callback.answer() 