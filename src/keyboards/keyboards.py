from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from config.config import AVAILABLE_MODELS

def get_main_keyboard() -> InlineKeyboardMarkup:
    keyboard = [
        [
            InlineKeyboardButton(text="üé® –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è", callback_data="generate_image"),
            InlineKeyboardButton(text="üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞", callback_data="generate_text")
        ],
        [
            InlineKeyboardButton(text="ü§ñ –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏", callback_data="choose_model"),
            InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å –º–æ–¥–µ–ª–∏", callback_data="update_models")
        ],
        [
            InlineKeyboardButton(text="üìú –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞", callback_data="show_history"),
            InlineKeyboardButton(text="‚ùì –ü–æ–º–æ—â—å", callback_data="help")
        ],
        [
            InlineKeyboardButton(text="‚ÑπÔ∏è –û –±–æ—Ç–µ", callback_data="about")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_models_keyboard(models_data: list, model_type: str = "image") -> InlineKeyboardMarkup:
    keyboard = []
    if model_type == "text":
        for model in models_data:
            name = model.get("name", "N/A")
            description = model.get("description", "–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è")
            keyboard.append([
                InlineKeyboardButton(
                    text=f"{name} - {description[:30]}...",
                    callback_data=f"text_model_{name}"
                )
            ])
    else:  # image models
        for model_name in models_data:
            keyboard.append([
                InlineKeyboardButton(
                    text=model_name,
                    callback_data=f"image_model_{model_name}"
                )
            ])
    
    keyboard.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_cancel_keyboard() -> InlineKeyboardMarkup:
    keyboard = [[
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel"),
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")
    ]]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_generation_type_keyboard() -> InlineKeyboardMarkup:
    keyboard = [
        [
            InlineKeyboardButton(text="üé® –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è", callback_data="select_image_models"),
            InlineKeyboardButton(text="üìù –¢–µ–∫—Å—Ç", callback_data="select_text_models")
        ],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_chat_history_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–µ–π —á–∞—Ç–∞."""
    keyboard = [
        [
            InlineKeyboardButton(
                text="üóë –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é",
                callback_data="clear_history"
            )
        ],
        [
            InlineKeyboardButton(
                text="üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é",
                callback_data="back_to_menu"
            )
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_generation_response_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç –º–æ–¥–µ–ª–∏."""
    keyboard = [
        [
            InlineKeyboardButton(text="üîÑ –ü–µ—Ä–µ–¥–µ–ª–∞—Ç—å –æ—Ç–≤–µ—Ç", callback_data="redo_text_generation"),
            InlineKeyboardButton(text="‚¨ÖÔ∏è –í –º–µ–Ω—é", callback_data="back_to_menu_from_gen")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard) 